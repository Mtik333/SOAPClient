
package com.mycompany.soapserv;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HelloWorld", targetNamespace = "http://soapserv.mycompany.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HelloWorld {


    /**
     * 
     * @return
     *     returns java.util.List<com.mycompany.soapserv.RsiAuditorium>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAuditoriums", targetNamespace = "http://soapserv.mycompany.com/", className = "com.mycompany.soapserv.GetAuditoriums")
    @ResponseWrapper(localName = "getAuditoriumsResponse", targetNamespace = "http://soapserv.mycompany.com/", className = "com.mycompany.soapserv.GetAuditoriumsResponse")
    @Action(input = "http://soapserv.mycompany.com/HelloWorld/getAuditoriumsRequest", output = "http://soapserv.mycompany.com/HelloWorld/getAuditoriumsResponse")
    public List<RsiAuditorium> getAuditoriums();

    /**
     * 
     * @return
     *     returns java.util.List<com.mycompany.soapserv.Product>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProducts", targetNamespace = "http://soapserv.mycompany.com/", className = "com.mycompany.soapserv.GetProducts")
    @ResponseWrapper(localName = "getProductsResponse", targetNamespace = "http://soapserv.mycompany.com/", className = "com.mycompany.soapserv.GetProductsResponse")
    @Action(input = "http://soapserv.mycompany.com/HelloWorld/getProductsRequest", output = "http://soapserv.mycompany.com/HelloWorld/getProductsResponse")
    public List<Product> getProducts();

    /**
     * 
     * @return
     *     returns java.lang.Boolean
     * @throws InvalidPasswordException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "authenticateClient", targetNamespace = "http://soapserv.mycompany.com/", className = "com.mycompany.soapserv.AuthenticateClient")
    @ResponseWrapper(localName = "authenticateClientResponse", targetNamespace = "http://soapserv.mycompany.com/", className = "com.mycompany.soapserv.AuthenticateClientResponse")
    @Action(input = "http://soapserv.mycompany.com/HelloWorld/authenticateClientRequest", output = "http://soapserv.mycompany.com/HelloWorld/authenticateClientResponse", fault = {
        @FaultAction(className = InvalidPasswordException_Exception.class, value = "http://soapserv.mycompany.com/HelloWorld/authenticateClient/Fault/InvalidPasswordException")
    })
    public Boolean authenticateClient()
        throws InvalidPasswordException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws InvalidPasswordException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHelloWorldAsString", targetNamespace = "http://soapserv.mycompany.com/", className = "com.mycompany.soapserv.GetHelloWorldAsString")
    @ResponseWrapper(localName = "getHelloWorldAsStringResponse", targetNamespace = "http://soapserv.mycompany.com/", className = "com.mycompany.soapserv.GetHelloWorldAsStringResponse")
    @Action(input = "http://soapserv.mycompany.com/HelloWorld/getHelloWorldAsStringRequest", output = "http://soapserv.mycompany.com/HelloWorld/getHelloWorldAsStringResponse", fault = {
        @FaultAction(className = InvalidPasswordException_Exception.class, value = "http://soapserv.mycompany.com/HelloWorld/getHelloWorldAsString/Fault/InvalidPasswordException")
    })
    public String getHelloWorldAsString(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws InvalidPasswordException_Exception
    ;

}
